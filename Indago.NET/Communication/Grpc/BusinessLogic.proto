syntax = "proto3";

package com.cadence.indago.scripting.generated;
import "Common.proto";

enum Language {
  VHDL = 0;
  VERILOG = 1;
  UNSUPPORTED = 2;
}

enum BusinessLogicPrimitiveType {
  PT_UNKNOWN = 0;
  PT_AND = 1;
  PT_NAND = 2;
  PT_OR = 3;
  PT_NOR = 4;
  PT_XOR = 5;
  PT_XNOR = 6;
  PT_BUF = 7;
  PT_NOT = 8;
  PT_BUFIF0 = 9;
  PT_BUFIF1 = 10;
  PT_NOTIF0 = 11;
  PT_NOTIF1 = 12;
  PT_NMOS = 13;
  PT_PMOS = 14;
  PT_CMOS = 15;
  PT_RNMOS = 16;
  PT_RPMOS = 17;
  PT_RCMOS = 18;
  PT_RTRAN = 19;
  PT_RTRANIF0 = 20;
  PT_RTRANIF1 = 21;
  PT_TRAN = 22;
  PT_TRANIF0 = 23;
  PT_TRANIF1 = 24;
  PT_PULLUP = 25;
  PT_PULLDOWN = 26;
  PT_SEQUDP = 27;
  PT_COMBUDP = 28;
  PT_CONTASSIGN = 29;
  PT_UNDEFINED = 30;
}

enum BusinessLogicCriteriaType {
  NONE = 0;
  DEPTH = 1;
  NAME = 2;
  SIZE = 3;
  START_TIME = 4;
  END_TIME = 5;
  EDGE_TYPE = 6;
  VALUES_DATABASE = 7;
  TYPE = 8;
  PATH = 9;
  COUNT = 10;
  FILE = 11;
  LINE = 12;
  MODULE_NAME = 13;
  COMPILATION_LIBRARY = 14;
  FULL_PATH = 15;
  IS_POWER_AWARE = 16;
  IS_LIBERTY = 17;
  HAS_PG_PINS = 18;
  IS_LIBERTY_INSIDE_LIBERTY = 19;
  TEXT = 20;
  DIRECTION = 21;
  IS_PORT = 22;
  MESSAGE = 23;
  DECLARATION_FILE = 24;
  DECLARATION_LINE = 25;
  DECLARATION_TYPE = 26;
  DECLARATION_NAME = 27;
  VERBOSITY = 28;
  CONTRIBUTOR_TYPE = 29;
  TAG = 30;
  IS_UDP = 31;
  IS_PRIMITIVE = 32;
  IS_CELL = 33;
  VALUE_STRING = 34;
  IS_VIP = 35;
  IS_ACTIVE = 36;
}

enum BusinessLogicPortType {
  REGULAR = 0;
  PGPIN = 1;
}

enum BusinessLogicPgPinType {
  PRIMARY_POWER_PIN = 0;
  PRIMARY_GROUND_PIN = 1;
  DEEPPWELL_PIN = 2;
  PWELL_PIN = 3;
  INTERNAL_GROUND_PIN = 4;
  BACKUP_GROUND_PIN = 5;
  BACKUP_POWER_PIN = 6;
  INTERNAL_POWER_PIN = 7;
  NWELL_PIN = 8;
  DEEPNWELL_PIN = 9;
  PG_NONE = 10;
}

message BusinessLogicDriver {
  optional uint32 handle = 1;
  optional string name   = 2;
  optional BusinessLogicTimePoint time = 3;
  optional bool active = 4;
  optional bool xprop = 5;
  optional bool noConnection = 6;
  optional BusinessLogicSourceLocation source = 7;
  optional string expression = 8;
  optional BusinessLogicInternalList driven_signals = 9;
}

message BusinessLogicLoad {
  optional uint32 handle = 1;
  optional string name   = 2;
  optional BusinessLogicSourceLocation source = 3;
  optional BusinessLogicInternalList contexts = 4;
  optional BusinessLogicInternalList driven_signals = 5;
}

message BusinessLogicPort {
  optional uint32 handles = 1;
  optional string name    = 2;
  optional string path    = 3;
  optional Direction direction = 4;
  optional BusinessLogicOptionalInternal loconn = 5;
  optional BusinessLogicInternalList     hiconn = 6;
  optional uint32 size    = 7;
  optional BusinessLogicPortType type = 8;
  optional BusinessLogicPgPinType pgPinType = 9;
}

message BusinessLogicDeclaration {
  optional uint32 handle = 1;
  optional string name   = 2;
  optional BusinessLogicInternalType type = 3;
  optional BusinessLogicSourceLocation source = 4;
  optional string compilation_library = 5;
  optional Language language = 6;
  optional bool is_cell = 7;
  optional bool is_primitive = 8;
  optional bool is_udp = 9;
}

message BusinessLogicScope {
  optional uint32 handle = 1;
  optional string name   = 2;
  optional string path   = 3;
  optional BusinessLogicInternalType type = 4;
  optional bool   no_declaration = 6;
  optional BusinessLogicDeclaration fetched_declaration = 7;
}

message BusinessLogicOptionalScope {
  oneof scope {
    bool no_scope = 1;
    BusinessLogicScope value = 2;
  }
}

message BusinessLogicPowerDomain {
  optional uint32 handle = 1;
  optional string name   = 2;
  optional string path   = 3;
  optional BusinessLogicSourceLocation source = 4;
  optional bool is_null = 5;
}

message BusinessLogicIsolationStrategy {
  optional uint32 handle = 1;
  optional string name   = 2;
  optional string path   = 3;
  optional BusinessLogicSourceLocation source = 4;
  optional BusinessLogicSupplySet supply_set = 5;
  optional BusinessLogicPowerDomain power_domain = 6;
  optional BusinessLogicInternal control_signal = 7;
  optional string clamp_value = 8;
}

message BusinessLogicRetentionStrategy {
  optional uint32 handle = 1;
  optional string name   = 2;
  optional string path   = 3;
  optional BusinessLogicSourceLocation source = 4;
  optional BusinessLogicPowerDomain power_domain = 5;
}

message BusinessLogicSupplySet {
  optional uint32 handle = 1;
  optional string name   = 2;
  optional string path   = 3;
  optional BusinessLogicSourceLocation source = 4;
}

message BusinessLogicSupplySetAndRole {
  optional uint32 handle = 1;
  optional string role   = 2;
  optional BusinessLogicSupplySet set = 3;
}

message BusinessLogicSupplyNetAndRole {
  optional uint32 handle = 1;
  optional string role   = 2;
  optional BusinessLogicInternal net = 3;
}

message BusinessLogicInternal {
  optional uint32 handle = 1;
  optional string name   = 2;
  optional string path   = 3;
  optional BusinessLogicInternalType type = 4;
  optional uint32 size   = 5;
  oneof value {
    bool no_value = 8;
    string fetched_value = 9;
  }
  oneof transitions {
    bool no_transitions = 10;
    uint32 fetched_transitions = 11;
  }
  optional Language language = 12;
  oneof declaration {
    bool no_declaration = 13;
    BusinessLogicDeclaration fetched_declaration = 14;
  }
}

message BusinessLogicOptionalInternal {
  oneof internal {
    bool no_internal = 1;
    BusinessLogicInternal value = 2;
  }
}

message BusinessLogicTextReference {
  optional BusinessLogicSourceLocation source = 1;
  optional BusinessLogicScope parent = 2;
  optional string text = 3;
  optional BusinessLogicObject object = 4;
  optional string annotation = 5;
}

message BusinessLogicSmartLogMessage {
  optional BusinessLogicTimePoint time = 1;
  optional string message = 2;
  optional BusinessLogicMessageVerbosity verbosity = 3;
  optional BusinessLogicMessageType type = 4;
  optional BusinessLogicSourceLocation source = 5;
  optional string tag = 6;
  optional uint32 index = 7;
  optional string destination = 8;
}

message BusinessLogicObject {
  oneof object {
    BusinessLogicInternal internal = 1;
    BusinessLogicScope scope = 2;
    BusinessLogicDriver driver = 3;
    BusinessLogicSmartLogMessage message = 4;
    BusinessLogicString string = 5;
    GUIComponent component = 6;
  }
}

message BusinessLogicSourceLocation {
  optional uint32 startLine = 1;
  optional uint32 endLine = 2;
  optional uint32 startColumn = 3;
  optional uint32 endColumn = 4;
  optional string file = 5;
  optional string code = 6;
}

message BusinessLogicQuery {
  optional uint32 handle = 1;
  optional uint32 clientID = 2;
  optional BusinessLogicQueryOptions options = 3;
}

message BusinessLogicQueryOptions {
  repeated BusinessLogicQueryCriteria criteria = 1;
  optional BusinessLogicResponseOptions responseOpts = 2;
}

message BusinessLogicQueryCriteria {
  optional BusinessLogicCriteriaType type = 1;
  optional BusinessLogicQueryOperand operand = 2;
  optional BusinessLogicQueryValue value = 3;
}

message BusinessLogicHandleList {
  repeated BusinessLogicHandle value = 1;
}

message BusinessLogicDeclarationList {
  repeated BusinessLogicDeclaration value = 1;
}

message BusinessLogicScopeList {
  repeated BusinessLogicScope value = 1;
}

message BusinessLogicPowerDomainList {
  repeated BusinessLogicPowerDomain value = 1;
}

message BusinessLogicIsolationStrategyList {
  repeated BusinessLogicIsolationStrategy value = 1;
}

message BusinessLogicSupplyNetAndRoleList {
  repeated BusinessLogicSupplyNetAndRole value = 1;
}

message BusinessLogicSupplySetAndRoleList {
  repeated BusinessLogicSupplySetAndRole value = 1;
}

message BusinessLogicSupplySetList {
  repeated BusinessLogicSupplySet value = 1;
}

message BusinessLogicRetentionStrategyList {
  repeated BusinessLogicRetentionStrategy value = 1;
}

message BusinessLogicPortList {
  repeated BusinessLogicPort value = 1;
}

message BusinessLogicInternalList {
  repeated BusinessLogicInternal value = 1;
}

message BusinessLogicDriverList {
  repeated BusinessLogicDriver value = 1;
}

message BusinessLogicLoadList {
  repeated BusinessLogicLoad value = 1;
}

message BusinessLogicSmartLogMessageList {
  repeated BusinessLogicSmartLogMessage value = 1;
}

message BusinessLogicTextReferenceList {
  repeated BusinessLogicTextReference value = 1;
}

message BusinessLogicValueDataList {
  repeated BusinessLogicValueData value = 1;
}

message BusinessLogicHandle {
  optional uint32 value = 1;
}

message BusinessLogicStringList {
  repeated BusinessLogicString value = 1;
}

message BusinessLogicClientInfo {
  optional string host = 1;
  optional string port = 2;
  optional string clientPath = 3;
  optional bool embedded = 4;
}


